pymatgen.electronic_structure
This package contains electronic structure related tools and analyses.
# 该软件包包含与电子结构相关的工具和分析。

  submodules --
  
  electronic_structure.bandstructure --http://pymatgen.org/pymatgen.electronic_structure.bandstructure.html
  - 类：BandStructure（kpoints，eigenvals，lattice，efermi，labels_dict =None，coords_are_cartesian =False，
                      structure=None，projections=None）
       base： object
       # 这是最通用的能带结构数据，它可以通过每个点的k点+能量列表来定义
       # kpoints:the list of kpoints (as Kpoint objects) in the band structure
         lattice_rec：带结构的倒易晶格。
         efermi：费米能量
         is_spin_polarized：如果带结构是自旋极化，则为真，否则为假
         bands：能量本征值为{spin：ndarray}
         nb_bands：返回band结构中的band数
         structure：返回结构
         projections：投影为{spin：ndarray}
       # 1. get_band_gap（）：返回带隙数据,形式为dict {“energy”，“direct”，“transition”}。
            @“energy”：带隙能量“direct”：一个布尔值，告知间隙是否是直接的“过渡”：transition的kpoint标签（例如，“Gamma-X”）
         2. get_cbm（）：返回有关CBM的数据。
         3. get_direct_band_gap（）：返回直接带隙的值。
         4. get_direct_band_gap_dict（）：返回由带旋转索引的带隙字典及其带指数和k点指数。
         5. get_kpoint_degeneracy（kpoint，cartesian = False，tol = 0.01 ）：
            基于结构对称性返回给定k点的简并性，如果没有结构，则简并或无。返回类型：（int或None）
         6. get_projection_on_elements（）：返回元素投影字典。如果band结构中没有投影则返回空字典。
         7. get_projections_on_elements_and_orbitals（el_orb_spec ）：返回元素和特定轨道上的投影字典的方法。
         8. get_sym_eq_kpoints（kpoint，cartesian = False，tol = 0.01 ）：返回唯一对称等效k点的列表。
            如果结构不可用则返回None，返回类型：（[1x3数组]或无）
         9. get_vbm（）：返回有关VBM的数据。
         10.is_metal（efermi_tol = 0.0001 ）：通过查看费米能级是否超过带，检查能带结构是否表示金属。如果是金属则返回为真，否则为假。
         
       BandStructureSymmLine(kpoints, eigenvals, lattice, efermi, labels_dict, coords_are_cartesian=False, 
                             structure=None, projections=None)
       base: pymatgen.electronic_structure.bandstructure.BandStructure, monty.json.MSONable
       # 此对象沿着布里渊区域中的选定（对称）线存储带结构。将不同的对称线（例如：Gamma到Z）称为“分支”。
       # 1. apply_scissor（new_band_gap ）：应用scissor opreation（CBM的移位）以适合给定的带隙。
            参数：new_band_gap - scissor带结构需要的带隙。
            返回具有应用scissor shift的BandStructureSymmLine对象
         2. get_branch（index）：返回什么分支是kpoint。可以有几个分支。
            参数：index - kpoint索引
            返回字典列表[{“name”，“start_index”，“end_index”，“index”}]，表示k_point所在的所有分支。
         3. get_equivalent_kpoints（index）：返回与给定值相等的kpoint索引列表（意味着它们是相同的frac cords）。
            参数：index - kpoint索引
            返回一个等价指数的列表
          
       Kpoint(coords, lattice, to_unit_cell=False, coords_are_cartesian=False, label=None)[source]
       base: monty.json.MSONable
       # 用于存储kpoint对象的类。kpoint定义为格子和frac或笛卡尔坐标语法类似于pymatgen.core.structure中的站点对象。
       
       LobsterBandStructureSymmLine(kpoints, eigenvals, lattice, efermi, labels_dict, coords_are_cartesian=False, 
                                    structure=None, projections=None)[source]
       base: pymatgen.electronic_structure.bandstructure.BandStructureSymmLine
       # 1. apply_scissor（new_band_gap ）：同BandStructureSymmline组块。
         2. get_projection_on_elements（）：返回元素投影字典。如果band结构中没有投影则返回空字典。
         3. get_projections_on_elements_and_orbitals（el_orb_spec ）：返回元素和特定轨道上的投影字典的方法。
         4. get_reconstructed_band_structure（list_bs，efermi = None ）：该方法采用带结构列表并从所有带结构重建一个带结构对象。
            @当在多个独立作业中拆分非自我一致的带结构运行并希望合并结果时，这通常非常有用
            参数：list_bs - BandStructure或BandStructureSymmLine对象的列表。
            返回BandStructure或BandStructureSymmLine对象（取决于list_bs对象的类型）
  
  electronic_structure.boltztrap --http://pymatgen.org/pymatgen.electronic_structure.boltztrap.html
  - 类：BoltztrapAnalyzer(gap=None, mu_steps=None, cond=None, seebeck=None, kappa=None, hall=None, doping=None,  
                         mu_doping=None, seebeck_doping=None, cond_doping=None, kappa_doping=None, hall_doping=None,
                         intrans=None, dos=None, dos_partial=None, carrier_conc=None, vol=None, warning=None, 
                         bz_bands=None, bz_kpoints=None, fermi_surface_data=None)
        base：object
        # 用于存储boltztrap运行的所有数据的类。构造函数直接获取Boltztrap生成的所有数据。
          gap - eV中插值后的间隙
          mu_steps - eV中电子化学势（或费米能级）的步骤。
          cond - 电子电导率张量除以不同温度和费米水平下的恒定弛豫时间（sigma / tau）。
          seebeck - 不同温度和费米水平下的塞贝克张量。
          kappa - 电子热导率张量除以不同温度和费米水平的恒定弛豫时间（kappa / tau）。
          hall - 不同温度和费米水平的霍尔张量格式。
          doping - 给予Boltztrap不同的doping水平。
          mu_doping - 给出一组给定的电子化学势（或费米能级）。
          seebeck_doping - 不同温度和掺杂水平下的塞贝克张量。
          cond_doping - 电子电导率张量除以不同温度和掺杂水平下的恒定弛豫时间（sigma / tau）
          kappa_doping - 在不同温度和掺杂水平下，导热系数张量除以恒定的弛豫时间（kappa / tau）。
          hall_doping - 不同温度和掺杂水平下的霍尔张量。
          intrans - 输入词典，例如{“scissor”：0.0}
          carrier_conc - 每单位电池中电子（或空穴）中载流子的浓度
          dos - 由Boltztrap计算的dos作为pymatgen Dos对象
          dos_partial - 网站和轨道上投射的部分DOS的数据
          vol - 埃立方体中的晶胞体积（A ^ 3）
          bz_bands - k点线上插值带的数据（run_type = BANDS）
          bz_kpoints - 插值带的倒数坐标中的k点（run_type = BANDS）
          fermi_surface_data - 从输出.cube文件导入的3D网格中的能量值。
        # 1. get_average_eff_mass（output ='eigs'，doping_levels = True ）
             给出平均有效质量张量。
          2. get_carrier_concentration（）：给出载体浓度（cm ^ -3）。
          3. get_complete_dos（structure，analyzer_for_second_spin =None）：从插值的投影带结构中给出一个带有DOS的CompleteDos对象。
          4. get_complexity_factor（output ='average'，temp = 300，doping_levels = False，Lambda = 0.5 ）
             费米表面复杂度因子的计算。
          5. get_conductivity（output= 'eigs' ，doping_levels =True，relaxation_time = 1E-14 ）
             给出电导率（1 / Ohm * m）的全3x3张量形式，3个特征值，或平均值（trace / 3.0）
          6. get_extreme（target_prop，maximize = True，min_temp = None，max_temp = None，min_doping = None，
                          max_doping = None，isotropy_tolerance = 0.05，use_average = True ）
             该方法在一系列载波，温度和掺杂水平上采用特征值，并告诉您给定target_property可以实现的“最佳”值是多少。
          7. get_hall_carrier_concentration（）：给出霍尔载流子浓度（cm ^ -3）。 
          8. get_power_factor（输出= 'eigs' ，doping_levels =True，relaxation_time = 1E-14 ）
             给出功率因数（Seebeck ^ 2 *电导率），以3x3张量形式，3个特征值，或平均值（trace / 3.0）。
          9. get_seebeck（output ='eigs'，doping_levels = True ）
             给出一个完整的3x3张量形式的塞贝克系数（microV / K），3个特征值，或平均值（trace / 3.0）。
          10.get_seebeck_eff_mass（output ='average'，temp = 300，doping_levels = False，Lambda = 0.5 ）
             塞贝克有效质量计算。
          11.get_symm_bands（structure，efermi，kpt_line =None，labels_dict =None）
             函数用于从Boltztrap输出读取波段并获得与DFT计算中的波段相当的BandStructureSymmLine对象。
          12.get_thermal_conductivity（output ='eigs'，doping_levels = True，k_el = True，relaxation_time = 1e-14 ）
             给出电导率的电子部分为全3x3张量形式，3个特征值，或平均值（迹线/ 3.0）
          13.get_zt（output= 'eigs' ，doping_levels =True，relaxation_time = 1E-14，KL = 1.0 ）
             给出一个完整的3x3张量形式的ZT系数（S ^ 2 * cond * T / thermal cond），作为3个特征值，或者作为平均值（trace / 3.0）给出。
          14.static parse_cond_and_hall（path_dir，doping_levels = None ）
             解析电导率和霍尔张量。
          15.static parse_intrans（path_dir ）：解析boltztrap.intrans主要是为了提取应用于波段或其他输入的剪刀的值。
          16.static parse_outputtrans（path_dir ）：解析.outputtrans文件
          17.static parse_struct（path_dir ）：解析boltztrap.struct文件（只有卷）
          18.1static parse_transdos（path_dir，efermi，dos_spin = 1，trim_dos = False ）
             解析.transdos（总DOS）和.transdos_x_y（部分DOS）文件
       
       BoltztrapRunner(bs, nelec, dos_type='HISTO', energy_grid=0.005, lpfac=10, run_type='BOLTZ', band_nb=None, 
       tauref=0, tauexp=0, tauen=0, soc=False, doping=None, energy_span_around_fermi=1.5, scissor=0.0, kpt_line=None, 
       spin=None, cond_band=False, tmax=1300, tgrid=50, symprec=0.001, cb_cut=10, timeout=7200)[
       base: monty.json.MSONable
       # 该类用于在带结构对象上运行Boltztrap。
         bs - 带结构对象;nelec - 电子数量；energy_grid - 用于集成的能量步骤（eV）；
         dos_type - 带结构集成的两个选项：使用四面体方法的“HISTO”（直方图）或“TETRA”。TETRA通常结果更好但时间长。
         lpfac - 真实空间中的插值点数。默认情况下，10在真实空间中提供的点数比在倒数空间中给出的k点数多10倍。
         run_type - boltztrap用法的类型。默认情况下 - BOLTZ :(默认）计算传输系数 - BANDS：沿指定的k点插入energy_span_around_fermi变量中指定的能量范围中包含的所有波段 - DOS：计算总和部分dos（需要自定义BoltzTraP代码！） - FERMI：计算费米表面或更正确以获得某些内插频带
         band_nb - 表示带号。用于费米表面插值（run_type =“FERMI”）；cond_band - 如果在FERMI模式中指定导带，则将此变量设置为True。
         tauref - 参考放松时间。如果我们想要超出恒定的弛豫时间进行建模，则仅设置为不等于零的值；tauexp - 非恒定弛豫时间方法中能量的指数。
         tauen - 非恒定弛豫时间方法的参考能量；
         soc - 自旋 - 轨道耦合（soc）计算的结果通常给出非极化（无旋转上升或下降）结果，但是单电子占据。
               如果band结构来自soc计算，则应将soc设置为True（默认为False）
         doping- 您想要计算的固定掺杂水平。默认情况下，此值设置为1e16到1e22，增量因子为10。
         energy_span_around_fermi - 通常不需要在整个能量范围内进行插值，而是在费米能级附近的特定范围内进行插值。
                                    默认情况下，它是1.5 eV。如果选择DOS或BANDS类型，则此范围自动设置为覆盖整个能量范围。
         scissor- 适用于带隙（eV）。这适用于在不改变带形状的情况下移动带边缘的scissor操作。这有助于纠正DFT中经常被低估的带隙。默认值为0.0（无剪刀）。
         kpt_line - 作为数组的k点的分数坐标列表或用于BANDS模式计算的Kpoint对象列表（高对称k点的标准路径自动设置为默认值）
         tmax - 计算的最高温度（K）（默认值= 1300）；tgrid - 计算的温度间隔（默认值= 50）
         symprec - 1e-3是pymatgen的默认值。
         cb_cut - 默认情况下，10％的最高导带被移除，因为它们通常不准确。调整cb_cut以更改已删除的波段的百分比（0-100）。
         timeout - 总时间限制（以秒为单位）：主要是为了在尝试查找费米能级时避免无限循环。
       # 1. run（path_dir = None，convergence = True，write_input = True，clear_dir = False，max_lpfac = 150，min_egrid = 5e-05 ）
            写输入（可选），运行BoltzTraP，并确保收敛（可选）：
         2. write_def（output_file ）
         3. write_energy（output_file ）
         4. write_input（output_dir ）
         5. write_intrans（output_file ）
         6. write_proj（output_file_proj，output_file_def ）
         7. write_struct（output_file ）
         8. compare_sym_bands（bands_obj，bands_ref_obj，nb =None）
            计算sym线上bzt和vasp带结构之间的相关平均值，对于所有波段和局部（对于每个分支），如果指定nb，则为差值平方（％）。
         9. eta_from_seebeck（seeb，Lambda ）
            它需要一个seebeck值并调整分析seebeck直到它相等返回：eta，其中两个seebeck系数相等（化学势降低）
         10.read_cube_file（文件名）
         11.seebeck_eff_mass_from_carr（eta，n，T，Lambda ）
            在某个载流子浓度eta下计算seebeck有效质量，以kB * T为单位，n in cm-3，T in K，以m0为单位返回质量
         12.seebeck_eff_mass_from_seebeck_carr（seeb，n，T，Lambda ）
            找到分析和计算的seebeck相同的化学势，然后计算该化学势和某个载流子浓度n下的塞贝克有效质量
         13.seebeck_spb（eta，Lambda = 0.5 ）：单抛物线模型中的塞贝克解析公式





        
        
        
        
       
       
       
       
       
       
       
       
       


                             
                             
                             
                             
                             
                             
                             
